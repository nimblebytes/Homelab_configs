## Token for the admin interface, preferably an Argon2 PCH string
## ==> Token changed and injected as a docker secret in compose file. 
## ==> Recommend paramenters: m=19456 (19 MiB), t=2, p=1 https://en.wikipedia.org/wiki/Argon2#Recommended_minimum_parameters
## ==> Example Token format: 
# ADMIN_TOKEN='$argon2id$v=19$m=65540,t=3,p=4$MmeKRnGK5RW5mJS7h3TOL89GrpLPXJPAtTK8FTqj9HM$DqsstvoSAETl9YhnsXbf43WeaUwJC6JhViIvuPoig78'

# Controls if new users can register
## ===> Controlled in the compose file to only allow during first container initialization
# SIGNUPS_ALLOWED=false

## Controls if new users need to verify their email address upon registration
## Needs a SMTP service to be setup
SIGNUPS_VERIFY=false

## Invitations org admins to invite users, even when signups are disabled
INVITATIONS_ALLOWED=true

## Name shown in the invitation emails that don't come from a specific organization
INVITATION_ORG_NAME="Forest Warden"

## The number of hours after which an organization invite, emergency access, email verification token and deletion request token expire 
INVITATION_EXPIRATION_HOURS=72

## Controls whether users can enable emergency access to their accounts. (Global)
# EMERGENCY_ACCESS_ALLOWED=true

## Controls whether users can change their email. (Global)
EMAIL_CHANGE_ALLOWED=true

## Controls whether users can set password hints. This setting applies globally to all users.
# PASSWORD_HINTS_ALLOWED=true

## If a SMTP service is configured, Password hints are sent via email, else they are shown on the homepage. 
## This is potentially sensitive information on the publically accessible instance and not recommended.
SHOW_PASSWORD_HINT=false

## Domain settings
## The domain must match the address from where you access the server
## Details:
## - https://github.com/dani-garcia/vaultwarden/wiki/Enabling-HTTPS
## - https://github.com/dani-garcia/vaultwarden/wiki/Proxy-examples
# DOMAIN=https://URL    ## Loaded in compose file


#######################
###     Logging     ###
#######################

## Enable extended logging, which shows timestamps and targets in the logs
# EXTENDED_LOGGING=true

## Timestamp format used in extended logging. Format specifiers: https://docs.rs/chrono/latest/chrono/format/strftime
# LOG_TIMESTAMP_FORMAT="%Y-%m-%d %H:%M:%S.%3f"

## Logging to file
# LOG_FILE=/path/to/log

## Log level. Valid values are "trace", "debug", "info", "warn", "error" and "off"
# LOG_LEVEL=info

##
## ===> Controlled in the compose env file
# SMTP_HOST=[smtp.email.server]
SMTP_PORT=587
SMTP_SECURITY=starttls
## ===> Added in compose env file
# SMTP_USERNAME=[email.address@email.service]
## ===> Added as docker secret in compose file
# SMTP_PASSWORD='<PASSWORD_STRING>'


## Enables push notifications (requires key and id from https://bitwarden.com/host)
PUSH_ENABLED=false
## ===> Added as docker secret in compose file
# PUSH_INSTALLATION_ID=CHANGEME
## ===> Added as docker secret in compose file
# PUSH_INSTALLATION_KEY=CHANGEME
## If you have selected "European Union" as your data region, use the following URIs instead.
PUSH_RELAY_URI=https://api.bitwarden.eu
PUSH_IDENTITY_URI=https://identity.bitwarden.eu


#######################
### Rocket settings ###
#######################

## Rocket specific settings
## See https://rocket.rs/v0.5/guide/configuration/ for more details.
# ROCKET_ADDRESS=0.0.0.0
## The default port is 8000, unless running in a Docker container, in which case it is 80.
# ROCKET_PORT=8000
# ROCKET_TLS={certs="/path/to/certs.pem",key="/path/to/key.pem"}
## Number of worker threads to spawn to handle requests. (Default=10)
# ROCKET_WORKERS=20
## Limit the size of the API calls allowed. Larger allowed bigger imports, smaller prevents API abuse (DoS). (Default=10MB)
# ROCKET_LIMITS={json=10485760} 