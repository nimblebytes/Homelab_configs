########################### STACK PROPERTIES
name: "jellyfin"

########################### NETWORKS
networks:
  proxy:
    name: proxy
    external: true

########################### SERVICES      
services:
  jellyfin:
    # image: jellyfin/jellyfin:${IMAGE_TAG:-latest}                   ## Jellyfin repo
    image: linuxserver/jellyfin:${IMAGE_TAG:-latest}                  ## LinuxServer repo
    container_name: ${CONTAINER_NAME:-jellyfin}
    hostname: ${HOSTNAME}
    restart: unless-stopped
    networks:
      proxy: {}
    ports:
      - "8096:8096"
    environment:
      ## PUID/PGID: Come come LinuxServer image of Jellyfin
      ## Not strictly needed with Docker Rootless install. If used during 
      ## initial container setup and the disable, this will create file
      ## permission error, specifically the DB on startup. As this defined the 
      ## USER of the Jellyfin app, Internally, the container is still running 
      ## as [0], i.e. attaching to container: touch test & ls -l test.
      ## Keep using these or modify the owner/group of the mounted folders.
      PUID: ${PUID_DOCKER:?}
      PGID: ${PGID_DOCKER:?}
      TZ: ${TZ:?}      

    devices:
    #   # VAAPI Devices - needed for Transcoding
    #   - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0

    volumes:
      - ${CONTAINER_VOLUME:?}/config:/config
      - ${CONTAINER_VOLUME:?}/cache:/config/cache
      - ${CONTAINER_VOLUME:?}/metadata:/config/data/metadata          ## Split out the metadata to make backups smaller
      - ${MEDIA_DOCU_VOLUME:?}:/Docus
      - ${MEDIA_MOVIES_VOLUME:?}:/Movies
      - ${MEDIA_MUSIC_VOLUME:?}:/Music
      - ${MEDIA_TVSERIES_VOLUME:?}:/TV_Series


    labels:
      homepage.group: Media Players
      homepage.name: Jellyfin
      homepage.icon: jellyfin.png
      homepage.href: https://jelly.${DOMAIN_NAME:?}
      homepage.description: Jellyfin portal
      homepage.widget.type: jellyfin
      homepage.widget.url: http://${CONTAINER_NAME:-jellyfin}:8096
      homepage.widget.key: "{{HOMEPAGE_FILE_JELLYFIN_API_KEY}}"
      homepage.widget.enableBlocks: "true"                         ## Optional. Default: false. Show the info fields
      homepage.widget.fields: '["movies", "series", "songs"]'      ## Options: "movies", "series", "episodes", "songs"
      homepage.widget.enableNowPlaying: "true"                     ## Optional. Defaults: true

      traefik.enable: "true"
      traefik.http.routers.jellyfin.entrypoints: https-internal     ## Only available for the internal network
      traefik.http.routers.jellyfin.rule: Host(`jelly.${DOMAIN_NAME:?}`)
      traefik.http.routers.jellyfin.service: jellyfin
      traefik.http.routers.jellyfin.tls.certresolver: letsencrypt_dns
      traefik.http.services.jellyfin.loadbalancer.server.url: "http://${CONTAINER_NAME:-jellyfin}:8096"