## Initial container start - CrowdSec log processing container only
## 
## If this container is not going to be the LAPI, enable these 3 variables for the initial start:
## - To prevent the container from terminating, as it cannot connect to the real LAPI yet
## - Alias for the proper variables are used. If the proper vairable are populated, connection to the LAPI will fail and the container terminates
## - Easier registration with the LAPI via a single docker command
## - Update LAPI_HOST_URL to contain the URL of the real LAPI
## 
# REGISTER_USERNAME="${HOSTNAME:?}_crowdsec"        ## Used as alias for AGENT_USERNAME during registration
# LAPI_HOST_URL="http://10.0.31.1:8081"             ## Used as alias for LOCAL_API_URL during registration
# DISABLE_LOCAL_API="false"                         ## Container's LAPI needs to be enable to be able to register with the real LAPI

## Subsequent container start - CrowdSec log processing container only
##
## Only after succession registration with the real LAPI:
##  - Disable/remove the variables above
##  - Enable/uncomment this variable
DISABLE_LOCAL_API="true"   

## (Optional) - BOUNCER_KEY_XXXXX - Usage: https://hub.docker.com/r/crowdsecurity/crowdsec
## -- Variable can be saftely removed. Only defined here for completeness ---
##
## Only needed if this container will be the LAPI and bouncer API tokens need to be pre-registered. 
## This function cannot be used to update a bouncer API token.
## Environment variable or Docker secrets can be used. 
##  
# BOUNCER_KEY_CROWDSEC="KEY_TO_REGISTER_NEW_BOUNCER_FOR_SERVICE_NAME"

# LOCAL_API_URL="http://IP:PORT"                    ## Only needed if this container is the LAPI. For child log processor this can be disabled

## A list of collections that we want to install and monitor on this server
##  - https://hub.crowdsec.net/author/crowdsecurity/collections/
COLLECTIONS="crowdsecurity/traefik crowdsecurity/http-cve"

CUSTOM_HOSTNAME="${HOSTNAME:?}_crowdsec"